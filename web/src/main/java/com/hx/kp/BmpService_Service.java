package com.hx.kp;

import org.springframework.core.io.ClassPathResource;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2020-08-12T15:29:15.225+08:00
 * Generated source version: 3.2.6
 *
 */
@WebServiceClient(name = "bmpService",
                  wsdlLocation = "file:bmpService_local.wsdl",
                  targetNamespace = "http://api.ws.common.adminWeb.bmp.seg/")
public class BmpService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://api.ws.common.adminWeb.bmp.seg/", "bmpService");
    public final static QName BmpServiceImplPort = new QName("http://api.ws.common.adminWeb.bmp.seg/", "BmpServiceImplPort");
    static {
        URL url = null;
        try {
            ClassPathResource classPathResource = new ClassPathResource("bmpService_local.wsdl");

            URL url1 = classPathResource.getURL();
            url = new URL("file:bmpService_local.wsdl");
//            url = new URL("file:D:\\resources\\java\\springboot-family-meals\\web\\src\\main\\resources\\bmpService_local.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(BmpService_Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:bmpService_local.wsdl");
        } catch (IOException e) {
            e.printStackTrace();

        }
        WSDL_LOCATION = url;
    }

    public BmpService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public BmpService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BmpService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public BmpService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public BmpService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public BmpService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns BmpService
     */
    @WebEndpoint(name = "BmpServiceImplPort")
    public BmpService getBmpServiceImplPort() {
        return super.getPort(BmpServiceImplPort, BmpService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BmpService
     */
    @WebEndpoint(name = "BmpServiceImplPort")
    public BmpService getBmpServiceImplPort(WebServiceFeature... features) {
        return super.getPort(BmpServiceImplPort, BmpService.class, features);
    }

}
